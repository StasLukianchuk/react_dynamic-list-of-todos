{"version":3,"sources":["types/FilterTodo.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoItem","todo","currentTodo","onSelect","id","title","completed","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","query","changeInput","selectedOption","changeOption","value","onChange","event","target","All","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","onClose","useState","currentUser","setCurrentUser","loadUser","userById","a","user","useEffect","href","email","name","App","visibleTodos","setVisibleTodos","setCurrentTodo","setQuery","setSelectedOption","loadTodos","useCallback","string","option","filteredTodos","filter","preparedTodos","toLowerCase","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac168d24.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoItemProps {\n  todo: Todo;\n  currentTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoItem: React.FC<TodoItemProps> = (\n  { todo, currentTodo, onSelect },\n) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      key={id}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onSelect(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': id !== currentTodo?.id,\n              'fa-eye-slash': id === currentTodo?.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface TodoListProps {\n  todos: Todo[];\n  currentTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<TodoListProps> = (\n  {\n    todos,\n    currentTodo,\n    onSelect,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <TodoItem\n          todo={todo}\n          currentTodo={currentTodo}\n          onSelect={onSelect}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/FilterTodo';\n\ninterface TodoFilterProps {\n  query: string;\n  changeInput: (query: string) => void;\n  selectedOption: string;\n  changeOption: (option: Filter) => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  query,\n  changeInput,\n  selectedOption,\n  changeOption,\n}) => {\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeInput(event.target.value);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeOption(event.target.value as Filter);\n  };\n\n  const handleButtonReset = () => {\n    changeInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleSelect}\n          >\n            <option value={Filter.All}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleButtonReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const loadUser = async (userById: number) => {\n    const user = await getUser(userById);\n\n    setCurrentUser(user);\n  };\n\n  useEffect(() => {\n    loadUser(userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser?.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/FilterTodo';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState(Filter.All);\n\n  const loadTodos = async () => {\n    const todos = await getTodos();\n\n    setVisibleTodos(todos);\n  };\n\n  const changeInput = useCallback((string: string) => {\n    setQuery(string);\n  }, []);\n\n  const changeOption = useCallback((option: Filter) => {\n    setSelectedOption(option);\n  }, []);\n\n  const filterTodos = useCallback((string: string, filter: Filter, todos: Todo[]) => {\n    let preparedTodos = todos;\n\n    switch (filter) {\n      case Filter.ACTIVE:\n        preparedTodos = todos.filter(({ completed }) => !completed);\n        break;\n      case Filter.COMPLETED:\n        preparedTodos = todos.filter(({ completed }) => completed);\n        break;\n      default:\n        preparedTodos = todos;\n    }\n\n    return preparedTodos.filter(({ title }) => (\n      title.toLowerCase().includes(string.toLowerCase())\n    ));\n  }, []);\n\n  const handleSelect = (todo: Todo) => {\n    setCurrentTodo(todo);\n  };\n\n  const handleClose = () => {\n    setCurrentTodo(null);\n  };\n\n  const filteredTodos = filterTodos(query, selectedOption, visibleTodos);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                changeInput={changeInput}\n                selectedOption={selectedOption}\n                changeOption={changeOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(!filteredTodos.length && !query)\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    currentTodo={currentTodo}\n                    onSelect={handleSelect}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} onClose={handleClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}