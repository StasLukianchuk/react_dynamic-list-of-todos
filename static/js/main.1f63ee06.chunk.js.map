{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","currentTodo","choosenTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","query","changeInput","selectedOption","changeOption","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","closeModal","useState","currentUser","setCurrentUser","loadUser","userById","a","user","useEffect","href","email","name","App","visibleTodos","setVisibleTodos","setCurrentTodo","setQuery","setSelectedOption","loadTodos","filteredTodos","string","filter","toLowerCase","includes","filterTodos","option","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f63ee06.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n  currentTodo: Todo | null;\n  choosenTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<TodoListProps> = (\n  {\n    todos,\n    currentTodo,\n    choosenTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => choosenTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames({\n                    'far fa-eye': id !== currentTodo?.id,\n                    'far fa-eye-slash': id === currentTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ninterface TodoFilterProps {\n  query: string;\n  changeInput: (query: string) => void;\n  selectedOption: string;\n  changeOption: (option: string) => void;\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  query,\n  changeInput,\n  selectedOption,\n  changeOption,\n}) => {\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeInput(event.target.value);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeOption(event.target.value);\n  };\n\n  const handleButtonReset = () => {\n    changeInput('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleButtonReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface TodoModalProps {\n  todo: Todo;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, closeModal }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const loadUser = async (userById: number) => {\n    const user = await getUser(userById);\n\n    setCurrentUser(user);\n  };\n\n  useEffect(() => {\n    loadUser(userId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser?.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [selectedOption, setSelectedOption] = useState<string>('all');\n\n  const loadTodos = async () => {\n    const todos = await getTodos();\n\n    setVisibleTodos(todos);\n  };\n\n  const changeInput = (string: string) => {\n    setQuery(string);\n  };\n\n  const changeOption = (option: string) => {\n    setSelectedOption(option);\n  };\n\n  const filterTodos = (string: string) => {\n    let todos = visibleTodos;\n\n    switch (selectedOption) {\n      case 'active':\n        todos = visibleTodos.filter(({ completed }) => !completed);\n        break;\n      case 'completed':\n        todos = visibleTodos.filter(({ completed }) => completed);\n        break;\n      default:\n        break;\n    }\n\n    return todos.filter(({ title }) => (\n      title.toLowerCase().includes(string.toLowerCase())\n    ));\n  };\n\n  const choosenTodo = (todo: Todo) => {\n    setCurrentTodo(todo);\n  };\n\n  const closeModal = () => {\n    setCurrentTodo(null);\n  };\n\n  const filteredTodos = filterTodos(query);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                changeInput={changeInput}\n                selectedOption={selectedOption}\n                changeOption={changeOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {filteredTodos.length === 0 && query === '' ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  currentTodo={currentTodo}\n                  choosenTodo={choosenTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}